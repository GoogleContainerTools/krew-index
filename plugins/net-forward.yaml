# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: krew.googlecontainertools.github.com/v1alpha2
kind: Plugin
metadata:
  name: net-forward
spec:
  version: "v1.0.3"       
  platforms:
  - selector:
      matchLabels:
        os: linux
    uri: https://github.com/antitree/krew-net-forward/releases/download/v1.0.3/net-forward_v1.0.3.tar.gz
    sha256: "645adb05d9ad68ecc91d9034cb80b1e2fe4762864323c12de0f2bc5afe20baa0"
    bin: "net-forward"  
  shortDescription: "Extend the functionality of port-forward connect to any IP and port (not just Pods and Services)."
  homepage: https://github.com/antitree/krew-net-forward
  caveats: |
    This plugin needs the alpine:socat image available to the node.
  description: |     
    Similar to kubectl port-forward but without requiring users to enter a 
    Pod or Svc object in the cluster. Instead you can choose any IP address
    and port of your choosing. You could for example use it to test whether
    a Namespace is able to access a Pod's private IP in a different Namespace.
    Or use it to connect to a service located on an adjacent subnet outside
    of the cluster itself. It does this (similar to port-forward) by deploying
    a socat Pod and listener you can port-forward to you, which auto-proxies
    to the IP and port users supplied.

